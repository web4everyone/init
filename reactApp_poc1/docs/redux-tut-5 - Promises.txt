import { applyMiddleWare, createStore } from 'redux';
import axios from 'axios';
import logger from 'redux-logger';
imort thunk from 'redux-thunk';
import promise from 'redux-promise-middleware';

const initialState ={
 fetchin:false,
 fetched:false,
 users:[],
 error:null,
}

const reducer = (state=initialState, action)=>{

	switch(action.type){
	  case "FETCH_USERS_PENDING": {
		return{...state, fetching:true}
		break;
	  }
	  
	  case "FETCH_USERS_REJECTED":{
		return {...state, fetching:false, error: action.paylod}
		break;
	  }

	  case "RECEIVE_USERS_FULLFILLED":{
		return{...state, fetching:false, fetched:true, users:action.payload}
		break;
	  }
	}

	return state

}

 const middleware =  applyMiddleware(promise(), thunk, logger())
 const store = createStore(reducer, middleware)

 store.dispatch({
	type:"FETCH_USERS",
	payload: axios.get("http://rest.learncode.academy/api/wstern/users")
 })